syntax = "proto3";

package lock_manager;

import "google/protobuf/empty.proto";

option go_package = "github.com/ruslanSorokin/lock-manager-api/gen/go/grpc/proto;proto";

// LockReq is a request for Lock call.
message LockReq{
  // Required.
  optional string resource_id = 1;
}

// LockRes is a response for LockReq.
message LockRes{
  // Error is a enum error. Sent in status error message if any.
  enum Error{
    ERR_UNSPECIFIED = 0;
    // ERR_INVALID_RESOURCE_ID means that resource_id violates one of its constraint
    ERR_INVALID_RESOURCE_ID = 1;
    // ERR_LOCK_ALREADY_EXISTS means that resource_id is already locked
    ERR_LOCK_ALREADY_EXISTS = 2;
  }
  // Required.
  optional string token = 1;
}

// UnlockReq is a request for Unlock call.
message UnlockReq{
  // Required.
  optional string resource_id = 1;
  // Required.
  optional string token = 2;
}

// UnlockRes is a response for UnlockReq.
message UnlockRes{
  // Error is a enum error. Sent in status error message if any.
  enum Error{
    ERR_UNSPECIFIED = 0;
    // ERR_INVALID_TOKEN means that token violates one of its constraint
    ERR_INVALID_TOKEN = 1;
    // ERR_WRONG_TOKEN means that token doesn't fit
    ERR_WRONG_TOKEN = 2;
    // ERR_INVALID_RESOURCE_ID means that resource_id violates one of its constraint
    ERR_INVALID_RESOURCE_ID = 3;
    // ERR_LOCK_NOT_FOUND means that lock with given resource_id was not found
    ERR_LOCK_NOT_FOUND = 4;
  }
  google.protobuf.Empty response = 1;
}
